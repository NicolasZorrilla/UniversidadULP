
package gui;

import dataBaseAccess.AlumnoData;
import dataBaseAccess.InscripcionData;
import entity.Alumno;
import entity.Inscripcion;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nicolas
 */
public class ManipulacionDeNota extends javax.swing.JInternalFrame {

    DefaultTableModel tableModel = new DefaultTableModel() {
        public boolean isCellEditable(int r, int c) {
            return false;
        }
    };
    /**
     * Creates new form ManipulacionDeNota
     */
    public ManipulacionDeNota() {
        initComponents();
        cargarComboAlumno();
        cargarModeloTabla();
        limpiarFilas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboAlumno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMateria = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        btnModificar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Manipulación de notas");
        setPreferredSize(new java.awt.Dimension(500, 400));

        jPanel1.setBackground(new java.awt.Color(148, 176, 183));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel1.setText("Seleccione un alumno:");

        comboAlumno.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        comboAlumno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAlumnoActionPerformed(evt);
            }
        });

        tableMateria.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderColor"));
        tableMateria.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        tableMateria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMateria.setGridColor(new java.awt.Color(74, 112, 122));
        jScrollPane1.setViewportView(tableMateria);

        jSeparator1.setBackground(new java.awt.Color(148, 176, 183));
        jSeparator1.setForeground(new java.awt.Color(74, 112, 122));

        btnModificar.setBackground(new java.awt.Color(74, 112, 122));
        btnModificar.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.setIcon(new javax.swing.ImageIcon("/home/nicolas/NetBeansProjects/universidadEjemplo/img/pencil-minus.png")); // NOI18N
        btnModificar.setText("Modificar nota");
        btnModificar.setBorder(null);
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboAlumno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAlumnoActionPerformed
        refrescarTabla();
    }//GEN-LAST:event_comboAlumnoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            int row = tableMateria.getSelectedRow();
            
            if (row != -1) {
                
                int nota = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese la nueva nota.", "Actualizar nota", JOptionPane.QUESTION_MESSAGE));
                
                if (nota >= 1 && nota <= 10) {
                    int idMateria = (int)tableMateria.getValueAt(row, 0);

                    Alumno alumno = (Alumno)comboAlumno.getSelectedItem();

                    InscripcionData inscripciondata = new InscripcionData();
                    inscripciondata.actualizarNota(alumno.getIdAlumno(), idMateria, nota);
                } else {
                    JOptionPane.showMessageDialog(this, "La nota es invalida.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una materia en la tabla.");
            }
            refrescarTabla();
        } catch (NumberFormatException ex) {
            
        }
    }//GEN-LAST:event_btnModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<Alumno> comboAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tableMateria;
    // End of variables declaration//GEN-END:variables

    private void cargarModeloTabla() {
        tableModel.addColumn("Código");
        tableModel.addColumn("Nombre");
        tableModel.addColumn("Nota");
        tableMateria.setModel(tableModel);
    }
    
    private void cargarComboAlumno() {
        AlumnoData alumnodata = new AlumnoData();
        for (Alumno alumno : alumnodata.listarAlumnos()) {
            comboAlumno.addItem(alumno);
        }
    }
    
    private void limpiarFilas() {
        for (int i = tableModel.getRowCount() -1; i >= 0; i--) {
            tableModel.removeRow(i);
        }
    }
    
    private void refrescarTabla() {
        limpiarFilas();

        Alumno alumno = (Alumno)comboAlumno.getSelectedItem();

        List<Inscripcion> inscripciones = new ArrayList();
        
        InscripcionData inscripciondata = new InscripcionData();
        inscripciones = inscripciondata.obtenerInscripcionesPorAlumno(alumno.getIdAlumno());

        for (Inscripcion inscripcion : inscripciones) {
            tableModel.addRow(new Object[] {
                inscripcion.getMateria().getIdMateria(),
                inscripcion.getMateria().getNombre(),
                inscripcion.getNota()
            });
        }
    }
}
